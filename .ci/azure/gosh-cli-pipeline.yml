variables:
- name: RUSTUP_TOOLCHAIN
  value: 1.67.0

trigger: none
pr: none

strategy:
  matrix:
    linux:
      imageName: ubuntu-20.04
      binName: gosh
      artifactNameAmd: linux-amd64
  maxParallel: 3

pool:
  vmImage: $(imageName)

steps:
#######################################################
# Pre-requirements
# Linux
- script: |
    sudo apt install -y protobuf-compiler 
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: Install pre-requirements Linux

###########################################################
# Rust setup
# Linux 
- script: |
    set -e
    curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
    echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
  env:
    RUSTUP_TOOLCHAIN: ${{ variables.RUSTUP_TOOLCHAIN }}
  displayName: "Install rust (*nix)"
  condition: eq( variables['Agent.OS'], 'Linux' )

##########################################################
# Build
# Linux
- script: |
    set -ex
    #cargo build --release --bin gosh
    sudo apt update -y
    sudo apt install -y build-essential g++-x86-64-linux-gnu libc6-dev-amd64-cross g++-aarch64-linux-gnu libc6-dev-arm64-cross gcc-aarch64-linux-gnu
    rustup target add aarch64-unknown-linux-gnu 
    cargo build --release --target aarch64-unknown-linux-gnu --bin gosh
  env:
    CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER: x86_64-linux-gnu-gcc
    CC_x86_64_unknown_linux_gnu: x86_64-linux-gnu-gcc
    CXX_x86_64_unknown_linux_gnu: x86_64-linux-gnu-g++
    CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
    CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
    CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++
  workingDirectory: ./
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: Build Linux 

##################################
# Publish 
# Linux amd64 
- publish: ./target/release/$(binName)
  artifact: $(artifactNameAmd)
  displayName: Publish amd64 Linux

# Linux arm64
- publish: ./target/aarch64-unknown-linux-gnu/release/$(binName)
  artifact: linux-arm64
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: Publish arm64 Linux